Running: "/usr/bin/protoc" "--include_imports" "--include_source_info" "-o" "/tmp/prost-buildWU1ZPb/prost-descriptor-set" "-I" "src" "src/keys.proto" "src/envelope.proto" "src/peer_record.proto"
prost: " Envelope encloses a signed payload produced by a peer, along with the public"
prost: " key of the keypair it was signed with so that it can be statelessly validated"
prost: " by the receiver."
prost: ""
prost: " The payload is prefixed with a byte string that determines the type, so it"
prost: " can be deserialized deterministically. Often, this byte string is a"
prost: " multicodec."
prost: " public_key is the public key of the keypair the enclosed payload was"
prost: " signed with."
prost: " payload_type encodes the type of payload, so that it can be deserialized"
prost: " deterministically."
prost: " payload is the actual payload carried inside this envelope."
prost: " signature is the signature produced by the private key corresponding to"
prost: " the enclosed public key, over the payload, prefixing a domain string for"
prost: " additional security."
prost: " PeerRecord messages contain information that is useful to share with other peers."
prost: " Currently, a PeerRecord contains the public listen addresses for a peer, but this"
prost: " is expected to expand to include other information in the future."
prost: ""
prost: " PeerRecords are designed to be serialized to bytes and placed inside of"
prost: " SignedEnvelopes before sharing with other peers."
prost: " peer_id contains a libp2p peer id in its binary representation."
prost: " seq contains a monotonically-increasing sequence counter to order PeerRecords in time."
prost: " addresses is a list of public listen addresses for the peer."
prost: " AddressInfo is a wrapper around a binary multiaddr. It is defined as a"
prost: " separate message to allow us to add per-address metadata in the future."
